{"ast":null,"code":"var _jsxFileName = \"/Users/nick/general_assembly/sei/flamingos/unit_4/project-4/Art-Space/client/src/screens/WorkEdit/WorkEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { getWork, editWork } from \"../../services/works.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WorkEdit() {\n  _s();\n\n  const [workData, setWorkData] = useState({});\n  useEffect(() => {\n    const fetchWork = async id => {\n      const current_work = await getWork(id);\n      setWorkData(current_work);\n    };\n\n    fetchWork(params.id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"this is for editing a work\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WorkEdit, \"1VjfooNYNPhRn1BMGd0X+rxAkV4=\");\n\n_c = WorkEdit;\nexport default WorkEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkEdit\");","map":{"version":3,"sources":["/Users/nick/general_assembly/sei/flamingos/unit_4/project-4/Art-Space/client/src/screens/WorkEdit/WorkEdit.jsx"],"names":["useState","useEffect","getWork","editWork","WorkEdit","workData","setWorkData","fetchWork","id","current_work","params"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,yBAAlC;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,MAAOC,EAAP,IAAc;AAChC,YAAMC,YAAY,GAAG,MAAMP,OAAO,CAACM,EAAD,CAAlC;AACAF,MAAAA,WAAW,CAACG,YAAD,CAAX;AACD,KAHC;;AAIAF,IAAAA,SAAS,CAACG,MAAM,CAACF,EAAR,CAAT;AACD,GANQ,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAdQJ,Q;;KAAAA,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\"\nimport { getWork, editWork } from \"../../services/works.js\"\nfunction WorkEdit() {\n  const [workData, setWorkData] = useState({})\n  useEffect(() => {\n    const fetchWork = async (id) => {\n    const current_work = await getWork(id)\n    setWorkData(current_work)\n  }\n    fetchWork(params.id)\n  })\n\n  \n  return(\n    <h1>this is for editing a work</h1>\n  )\n}\n\nexport default WorkEdit"]},"metadata":{},"sourceType":"module"}